<html xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 9">
<meta name=3DOriginator content=3D"Microsoft Word 9">
<link rel=3DFile-List href=3D"./HW5_%234_blitstien_files/filelist.xml">
<title>Informal Distinction of a Turing Machine from an =
Automaton:</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Preferred Customer</o:Author>
  <o:LastAuthor>Preferred Customer</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>5</o:TotalTime>
  <o:Created>2001-02-14T22:01:00Z</o:Created>
  <o:LastSaved>2001-02-14T22:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>305</o:Words>
  <o:Characters>1739</o:Characters>
  <o:Company>Dell Computer Corporation</o:Company>
  <o:Lines>14</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2135</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotShowRevisions/>
  <w:DoNotPrintRevisions/>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:13.0pt;
	font-family:Arial;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.SuperScript, li.SuperScript, div.SuperScript
	{mso-style-name:SuperScript;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	vertical-align:super;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1449660005;
	mso-list-type:hybrid;
	mso-list-template-ids:281557796 67698705 67698713 67698715 67698703 =
67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:1494301762;
	mso-list-type:hybrid;
	mso-list-template-ids:1769361622 67698705 67698713 67698715 67698703 =
67698713 67698715 67698703 67698713 67698715;}
@list l1:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1772626764;
	mso-list-type:hybrid;
	mso-list-template-ids:1660194462 1200380470 67698691 67698693 67698689 =
67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=3DEN-US style=3D'tab-interval:.5in'>

<div class=3DSection1>

<p class=3DMsoNormal><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Informal Distinction of a Turing Machine from an Automaton:</h3>

<p class=3DMsoNormal><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]>1)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Read and Write on the input tape</p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]>2)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Read/Write head can move left and right</p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]>3)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Tape is infinite</p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]>4)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Special states for Accepting/Rejecting take immediate =
effect</p>

<p class=3DMsoNormal><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Description of how a 2-stack? PDA can mimic these features of a =
Turing
Machine:</h3>

<p class=3DMsoNormal><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo3;
tab-stops:list .5in'><![if !supportLists]><b>1)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></b><![endif]><b>Read and Write on the input =
tape<o:p></o:p></b></p>

<p class=3DMsoNormal style=3D'margin-left:.5in'>The entire input tape =
can be loaded
into one of the stacks.<span style=3D"mso-spacerun: yes">=A0 </span>Once =
in the
stack, any of the data can be overwritten or inserted. In order to do =
this,
each item would have to be popped out of one stack and pushed into the =
other
until you reach the item that you want to write or read.<span
style=3D"mso-spacerun: yes">=A0 </span>You either pop the item to read =
it or push
the item you have to write.</p>

<p class=3DMsoNormal style=3D'margin-left:.25in'><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo3;
tab-stops:list .5in'><![if !supportLists]><b>2)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></b><![endif]><b>Read/Write head can move left and =
right<o:p></o:p></b></p>

<p class=3DMsoNormal style=3D'margin-left:.5in'>Assume the input has =
been pushed
into Stack 1, then popped from Stack 1 into Stack 2 (as to preserve the =
order
of the input):</p>

<p class=3DMsoNormal style=3D'margin-left:.5in'><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal style=3D'margin-left:.5in'>Right Move: Pop from =
Stack 2, push
into Stack 1.<span style=3D"mso-spacerun: yes">=A0 </span>Imagine the =
head pointing
at the top item in Stack 1.</p>

<p class=3DMsoNormal style=3D'margin-left:.5in'>Left Move: Pop from =
Stack 1, push
into Stack 2.<span style=3D"mso-spacerun: yes">=A0 </span>Imagine the =
head pointing
at the top item in Stack 2.</p>

<p class=3DMsoNormal style=3D'margin-left:.5in'><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo3;
tab-stops:list .5in'><![if !supportLists]><b>3)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></b><![endif]><b>Tape is infinite<o:p></o:p></b></p>

<p class=3DMsoBodyTextIndent>The 2-stack system can store any amount of =
symbols
in addition the original input string loaded in.<span =
style=3D"mso-spacerun:
yes">=A0 </span>Load all symbols into Stack 1.<span =
style=3D"mso-spacerun: yes">=A0
</span>If you want to =93insert=94 into the middle of the stack, pop =
each symbol from
Stack 1 and push into Stack 2 until you hit the insertion point, then =
push your
new symbol and the rest back onto stack 1.<span style=3D"mso-spacerun: =
yes">=A0
</span>if you want to add one to the =93front=94 end (bottom of stack =
1), pop
everything out of 1 and into 2, then push new symbol onto stack 1, then =
pop
from 2 and push all back to 1.<span style=3D"mso-spacerun: yes">=A0 =
</span>To add
onto the end, just push.<span style=3D"mso-spacerun: yes">=A0 </span>All =
of these
actions can be done infinitely.</p>

<p class=3DMsoNormal style=3D'margin-left:.5in'><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=3DMsoNormal =
style=3D'margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo3;
tab-stops:list .5in'><![if !supportLists]><b>4)<span style=3D'font:7.0pt =
"Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></b><![endif]><b>Special states for Accepting/Rejecting take =
immediate
effect<o:p></o:p></b></p>

<p class=3DMsoBodyTextIndent>This can be achieved in any automaton =96 =
An
=93immediate=94 result state can be constructed by looping all values =
back to
itself. </p>

<p class=3DMsoNormal><![if =
!supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>
