<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0047)http://www-db.stanford.edu/~ullman/hmu/hw5.html -->
<HTML><HEAD><TITLE>CS154 Assignment 5</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY bgColor=#ddddcc lang=EN>
<H1 align=center>CS154 Assignment #5 and CS154N Asssignment #1</H1>
<H3 align=center>Due Monday, February 28, 2000, 3:15PM</H3>
<P>Note: if you are taking CS154N, you should do only Problems 4 and 5. Please 
indicate on your assignment that you are in CS154N. 
<OL>
  <P>
  <LI>(<I>20 pts.; CS154 only</I>) Show that {<I>0^i1^j2^k</I> | 
  <I>i&lt;j&lt;k</I>} is not a context-free language. 
  <P></P>
  <LI>(<I>20 pts.; CS154 only</I>) As defined on the midterm, if <I>L</I> is a 
  language and <I>a</I> a symbol, <I>a\L</I> is the set of strings <I>w</I> such 
  that <I>aw</I> is in <I>L</I>. Show that if <I>L</I> is a CFL, then so is 
  <I>a\L</I>. You proof need not be extremely detailed, but should have enough 
  detail to convince a TA. In particular, I suggest you talk about the situation 
  where a typical string <I>w</I> is in <I>L</I> or where it is in <I>a\L</I>. 
  <P></P>
  <LI>(<I>20 pts.; CS154 only</I>) Give an algorithm to decide whether a given 
  CFL contains all strings of 0's. Your algorithm does not have to be efficient. 
  Exaplain why your algorithm works, although you do not have to give a formal 
  proof. <B>Note</B>: This problem is actually quite hard. If we'd asked for 
  ``contains all strings of 0's and 1's,'' there wouldn't even be such an 
  algorithm. There is a <A 
  href="http://www-db.stanford.edu/~ullman/hmu/hint5.html">Hint</A> available, 
  but we'd like you to think about the problem first. 
  <P></P>
  <LI>(<I>20 pts.</I>) Using the informal notion of programs and questions about 
  programs as in Section 8.1 of the course reader, consider asking whether a 
  program <I>P</I> with input <I>I</I> ever executes an assignment to a variable 
  named <I>x</I>. Prove that there is no program to tell whether this condition 
  holds, by reducing the ``hello, world'' problem to this one. <B>Hint</B>: 
  Remember that the given program in the reduction may have a variable <I>x</I>, 
  and you have to be careful that the program you create in your reduction 
  doesn't accidentally assign to <I>x</I> without your intending it to. 
  <P></P>
  <LI>(<I>20 pts.</I>) Give the specification (7-tuple plus the rules for delta) 
  for a Turing machine that accepts the language of regular expression 
  <B>a*b*</B>. </LI></OL></BODY></HTML>
