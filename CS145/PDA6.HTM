<body BGCOLOR=FFFFFF>
<title> CS145 Project Part 6 </title>
<center> <h3> CS145 - Introduction to Databases<br><i>Spring 2000, Prof. Widom</i></h3>
<h3>Personal Database Application: Part 6
<br>Due Monday May 15</h3>
</center>

<p><img src="http://www-cs.stanford.edu/gifs/line.red2.gif"><p>

This week you will experiment with Oracle's facilities for
<i>views</i>, <i>constraints</i>, and <i>triggers</i>.  View
definitions and constraint declarations largely follow the SQL2
standard although there are some restrictions; please see the previous
handout <a
href="http://www-db.stanford.edu/~widom/cs145/or-nonsql2.html">Oracle
8i SQL</a> for discussion.  Triggers are discussed in some detail in
the previous handout <a
href="http://www-db.stanford.edu/~widom/cs145/or-plsql.html">Using
Oracle PL/SQL</a>.  A few frequently-asked questions regarding
constraints and triggers appear on the <a
href="http://www-db.stanford.edu/~widom/cs145/or-faq.html">Oracle 8i:
Frequently Asked Questions</a> Web page, recently posted.

<ol>

<li> Create two useful views on top of your PDA database schema. Show
your <tt>CREATE VIEW</tt> statements and the response of the
system.  Then for each view show a query involving the view and the
system response (but as usual you should truncate the response if
more than a few tuples are produced).

<p><li> For this problem you will recreate your PDA schema, adding
specifications for additional keys, referential integrity, and other
constraints.

<ul>

<p><b>(a)</b> Modify your PDA <tt>CREATE TABLE</tt> statements as
follows.

<ul>

<p><li> For each relation in your schema, if the relation has
any keys in addition to the <tt>PRIMARY KEY</tt> that you already declared,
specify the additional keys as <tt>UNIQUE</tt>.  If there are no
additional keys, add a comment to that effect.

<p><li> For each referential integrity constraint that should
hold in your schema, specify the constraint using a
<tt>REFERENCING</tt> clause within the appropriate <tt>CREATE
TABLE</tt> statement.  You may use the default option for handling
referential integrity violations (violations will generate an error).
We expect that everyone's PDA should include at least one referential
integrity constraint.  If your PDA has no natural referential
integrity constraints, then it probably is either far simpler than we
asked for, or a poor design - please contact one of the course staff.

<p> <li> Add at least two attribute-based and two tuple-based
<tt>CHECK</tt> constraints to relations of your database schema.
Remember that these constraints are more limited in Oracle than in the
SQL2 standard; see the handout <a
href="http://www-db.stanford.edu/~widom/cs145/or-nonsql2.html">Oracle
8i SQL</a>.

</ul>

<p>Please turn in a <tt>.sql</tt> file containing all your <tt>CREATE
TABLE</tt> statements, and a script showing their successful execution
in Oracle.

<p><b>(b)</b> Reload your small PDA database.  Did you get any key,
referential integrity, or <tt>CHECK</tt> constraint violations?
Please turn in the <tt>.log</tt> file generated by the Oracle
bulk-loader.

<p><b>(c)</b> Reload your large PDA database.  Did you get any key,
referential integrity, or <tt>CHECK</tt> constraint violations?
Please turn in the <tt>.log</tt> file generated by the Oracle
bulk-loader.

<p><b>(d)</b> You don't necessarily need to modify your program for generating
data if it creates violations.  However, for this part of the problem
you should start with a database (small or large) that does not create
violations.  Write data modification commands to illustrate the
following seven scenarios:
<ol>
<p><li> An <tt>INSERT</tt> command creating a key violation
<li> An <tt>UPDATE</tt> command creating a key violation
<li> An <tt>INSERT</tt> command creating a referential integrity violation
<li> A <tt>DELETE</tt> command creating a referential integrity violation
<li> An <tt>UPDATE</tt> command creating a referential integrity violation
<li> An <tt>INSERT</tt> command creating a <tt>CHECK</tt> constraint violation
<li> An <tt>UPDATE</tt> command creating a <tt>CHECK</tt> constraint violation
</ol>

<p>Please turn in a <tt>.sql</tt> file containing all seven commands, and
a script showing their <i>unsuccessful</i> execution in Oracle.
    
</ul>

<p><li> Create at least two "interesting" triggers for your PDA.  For
each one, show your <tt>CREATE TRIGGER</tt> statement, its successful
execution, and the effects of two database modifications.  One
modification should cause the trigger to fire, and the other should
not.  Show in your script the results of queries demonstrating that the
trigger had an effect in the first case but not the second.

<p><li> <b>This problem is somewhat open-ended, however you must make
some attempt at this problem in order to receive full credit.</b>

<p>You are to do some sleuth work: Your task is to determine
what criteria exactly Oracle uses in deciding whether a view is
updatable, i.e., whether it is possible to perform <tt>INSERT</tt>,
<tt>DELETE</tt>, and/or <tt>UPDATE</tt> statements on the view.
While your sleuth work could involve sifting through <tt>HELP</tt>
pages or Oracle books, we prefer that you do it experimentally.  Write
a series of views along with modification commands on the views to
determine when Oracle allows views to be updated and when it does not.
As discussed in class and in the textbook, some SQL views are
obviously updatable, some are obviously not updatable (due to
ambiguities), and some are theoretically updatable but it is difficult
for a system to determine the correct update translations.  In your
solution to this problem you should attempt to provide a concise
characterization of those views that Oracle allows to be updated, and
you should support your claim by demonstrating:

<ul>

<p><li> views meeting the criteria that can be updated, and

<li> views not meeting the criteria that cannot be updated.

</ul>

<p>If separate criteria apply for <tt>INSERT</tt>, <tt>DELETE</tt>,
and <tt>UPDATE</tt> commands then these should be included in your
solution.  You may use your PDA schema and data for this problem if
you like, or you may use a separate, simpler database.

</ol>

<p><img src="http://www-cs.stanford.edu/gifs/line.red2.gif"><p>

<h4>Submission</h4>

<p>Unless otherwise specified, the scripts you turn in for this
assignment may show operations running over your small or your large
database (or in the case of Problem 4, another database altogether).
Note:

<ul>

<li>If you use your small database, be sure to test on
your large database as well to make sure everything is working.

<li>If you use your large database, do not submit listings showing
hundreds of lines of query results.

</ul>

As always, your assignment must be turned in on paper, you should
provide comments for any operations that are not crystal clear, and it
is an Honor Code violation to edit scripts before turning them in.

<p><img src="http://www-cs.stanford.edu/gifs/line.red2.gif"><p>
