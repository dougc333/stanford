Doug Chang USING 48 hour extension.
dougc@leland.stanford.edu
worked with
phartke@stanford.edu
shiangc@stanford.edu
pswani@stanford.edu
clmsoup@stanford.edu
jsham@stanford.edu
jsmarr@stanford.edu
mtsmith@stanford.edu



1.Equality, Resolution, and Group Theory (20 points) 
1) x = x                                                      (Equality Axiom) 
2) add(x,e) = x                                          (Group Theory Axiom) 
3) add(x, inv(x)) = e                                  (Group Theory Axiom) 
4) add(add(x,y),z) = add(x,add(y,z))     (Group Theory Axiom) 
5) a = b ?                                                   (Negated Goal) 
6) add(a,c) = add(b,c)                              (Negated Goal) 
7) add(a,e) = b ?                                       (5,2) {x<-a} 
8) add(a, add(x_1, inv(x_1))) = b ?        (7,3) 
9) add(add(a,x_1),inv(x_1)) = b?           (8,4) {x<-a, y<-x, z<-inv(x_1)} 
10) add(add(a,c), inv(c)) = b?      X1<-c
11) add(add(b,c), inv(c)) = b?     6,10
12) add(b,add(c,inv(c))=b?         4,11, x<-b, y<-c, z<-inv(c)
13) add(b,e)=b?                           3,12
14) add(b,e) = b                           2; x<-b
15) {} (I cant type out the other symbol)  13,14
16) 
  


 2.Structural Induction Trees (20 points) 

a)Show that the base case is true (i.e. show it's true for an atom). 
Let t be a tree consisting of one node. This tree has the properties described below, height is 0, and the number of nodes of t is 1.
height(t) = 0 & NumNodes(t) = 1    
As a check, we see that NumNodes(t) <= 2^(0+1) - 1

b)Write down the Inductive Hypothesis: Let k consist of the Universe of discourse of binary trees.
Ak.NumNodes(k) <=2^(height(k)+1)-1 nodes.
Where we define the < to mean at most or less than.

c)Show the that Inductive Step holds, this need not be a formal proof. (This should be done in terms of the "pair" function given in class).  
There are 2 cases we prove, first the height, then the number of nodes. We are taking into consideration the case when the 2 trees in the pair operator are not the same height. 
1) define the pair function  to return the number of nodes of the subtrees +1 and the height of the max subtree +1.
 
Let x and y be a balanced binary tree. 
We define the following functions and relations:
height(x) = n; 
height(pair(x,y)) <= (max(height(x), height(y) ) + 1; where max is a binary function constant that returns the max height of 2 trees. 
 
1)numNodes(x) <= 2^(n+1)-1 Premise
2)numNodes(y) <= 2^(n+1)-1 Premise
3)numNodes(pair(x,y)) = numNodes(numNodes(x)+numNodes(y)+1)   Premise 
4)numNodes(pair(x,y))<=2^(n+1)-1+2^(n+1)-1+1 nodes    1,2,3 substitution
5)numNodes(pair(x,y))<=2*2^(n+1)-1          Arithmetic
6)height(x) =n                    Premise
7)height(y) =n                    Premise
8)height(pair(x,y))             Premise
8)height(pair(x,y)) = n+1   Substitution, 6,7,8     
9) numNodes(pair(x,y))<=2^(height(pair(x,y))+1)-1 substitution 5,8

3. Clause Elimination (16 points) 
a. Which clauses would be eliminated by pure-literal elimination? All

b. Which clauses would be eliminated by tautology elimination? 4,6

c. Which clauses would be eliminated by subsumption elimination? None
 
4.Resolution Strategies (15 points) 
Use input resolution to derive the empty clause from the given set of clauses. To get full credit, you must use no more than the number of resolution steps indicated. 
Note: While for this problem set we're only looking at input resolution, be sure you are familiar with unit resolution and ordered resolution as well for the final. 
Input resolution: 5 steps (6-10) needed for this proof 
1.  { ~r(x1,y1), ~p(x1), s(x1) } 
2.  { ~q(b,x2) } 
3.  { q(b,x3), r(x3,x3) } 
4.  { ~s(x4), q(x4,a) } 
5.  { s(x5), p(x5) }  
6.  { q(b,x3), ~p(x3), s(x3)}                                   1,3; x3<-x1, x3<-y1     
7.  { ~p(x3), s(x3)}                                                2,6 x3<-x2
8.  {s(x3)}                                                              5,7 x3<-x5
9.   {q(x3,a}}                                                         4,8 x3<-x4
10   {}                                                                    2,9,a<-x2, b<-x3
  
5.  Induction (20 points) 
Object constants: 0, 1 
Unary function constant: s 
Binary function constant: + 
Axioms: 
1.      Ax.x + 0 = x 
2.      Ax.Ay.x + s(y) = s(x + y) 
3.      s(0) = 1 ; s(0) is the succession operator.

Prove: (x + 1) + y = (x + y) + 1 

a)  Give the induction axiom for this proof. 
Ax.(x+1)+0=(x+0)+1 & Ax.Ay.(((x+1)+y=(x+y)+1)=>((x+1)+s(y)=(x+s(y))+1))=>Ax.Ay.((x+1)+y=(x+y)+1)
b)  Give the inductive hypothesis. 
Ax.Ay.((x+1)+y=x+y+1) 


c)  Prove the base case using only axioms 1 through 3 above. 
Prove a+1+0 = (a+0)+1
1) a+0=a      UI Axiom 1, x<-a
2) (a+1)+0 = a+1   UI, Axiom 1, x<-a+1
4) (a+1)+0 = (a+0)+1   demodulation 1,2 


d)  Prove the inductive case using only axioms 1 through 3 above. 
For parts c and d, indicate the axioms used in each step and the rule, if any, applied (e.g. Demodulation, UI, etc.) 
Prove: a+1 +s(y) = a+s(y) from the inductive hypothesis which is a+1+y = a+y+1.

1. a+1+y = a+y+1                IH
2. a+1+y+1 = a+1+y+1    Reflexivity
3. a+1+y+1 = a+y+1+1    DM:2,3
4. y+1=s(y)                             AL:x<-y
5. a+1+s(y) = a+s(y)+1  DM:3,4
6.  Demodulation and Paramodulation (9 points) 
a) Which of the below are examples of demodulation? 2,3
b) Which are examples of paramodulation? 1,2,3
1. 
{p(f(a)),r(x)} 
{f(x) = x} 
 ---------------- 
{p(a),r(a)} ; if we substituted the bottom with x<-a, we get f(a)=a. We would get p(a) and r(x) if we used demodulation. This is not a case of demodulation. 
To test paramodulation we consider the union of 1 and 2 to get{p(a),r(a)}. Thus this is a case of paramodulation.                                                                                                                                                                                                                                                                                                                                                                    
2. 
{p(f(a))} 
{f(x) = y} 
----------------- 
{p(y)} ; if we substituted x<-a in the second line getting f(a)=y, we would have for the first clause p(y). The 2 requirements for demodulation is: 1) the equality is a unit clause which is correct in this case, and 2) we only perform substitution on the unit clause. f(x) =y is not defined because the equality has a one to many relationship. If this is the case, then this would not be valid cases of paramodulation or demodulation. 
3. 
{p(f(a,b))} 
{f(x,y) = x} 
-------------------- 
{p(a)} ; if we substituted x<-a for the second clause we get f(a,y) = a. If we also add y<-b we get p(f(a,b)) = a. Substituting into the first clause we get {p(a)}. This is a case of demodulation. 
